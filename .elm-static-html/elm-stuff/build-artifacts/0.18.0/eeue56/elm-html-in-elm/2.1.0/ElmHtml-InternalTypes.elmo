var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$escapableRawTextElements = {
	ctor: '::',
	_0: 'textarea',
	_1: {
		ctor: '::',
		_0: 'title',
		_1: {ctor: '[]'}
	}
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$rawTextElements = {
	ctor: '::',
	_0: 'script',
	_1: {
		ctor: '::',
		_0: 'style',
		_1: {ctor: '[]'}
	}
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$voidElements = {
	ctor: '::',
	_0: 'area',
	_1: {
		ctor: '::',
		_0: 'base',
		_1: {
			ctor: '::',
			_0: 'br',
			_1: {
				ctor: '::',
				_0: 'col',
				_1: {
					ctor: '::',
					_0: 'embed',
					_1: {
						ctor: '::',
						_0: 'hr',
						_1: {
							ctor: '::',
							_0: 'img',
							_1: {
								ctor: '::',
								_0: 'input',
								_1: {
									ctor: '::',
									_0: 'link',
									_1: {
										ctor: '::',
										_0: 'meta',
										_1: {
											ctor: '::',
											_0: 'param',
											_1: {
												ctor: '::',
												_0: 'source',
												_1: {
													ctor: '::',
													_0: 'track',
													_1: {
														ctor: '::',
														_0: 'wbr',
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$emptyFacts = {styles: _elm_lang$core$Dict$empty, events: _elm_lang$core$Maybe$Nothing, attributeNamespace: _elm_lang$core$Maybe$Nothing, stringAttributes: _elm_lang$core$Dict$empty, boolAttributes: _elm_lang$core$Dict$empty};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeDictFilterMap = function (decoder) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		function (_p0) {
			return _elm_lang$core$Dict$fromList(
				A2(
					_elm_lang$core$List$filterMap,
					function (_p1) {
						var _p2 = _p1;
						var _p3 = A2(_elm_lang$core$Json_Decode$decodeValue, decoder, _p2._1);
						if (_p3.ctor === 'Err') {
							return _elm_lang$core$Maybe$Nothing;
						} else {
							return _elm_lang$core$Maybe$Just(
								{ctor: '_Tuple2', _0: _p2._0, _1: _p3._0});
						}
					},
					_elm_lang$core$Dict$toList(_p0)));
		},
		_elm_lang$core$Json_Decode$dict(_elm_lang$core$Json_Decode$value));
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeAttributes = function (decoder) {
	return _elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$field,
				_eeue56$elm_html_in_elm$ElmHtml_Constants$attributeKey,
				_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeDictFilterMap(decoder)),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Json_Decode$succeed(_elm_lang$core$Dict$empty),
				_1: {ctor: '[]'}
			}
		});
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeOthers = function (otherDecoder) {
	return A2(
		_elm_lang$core$Json_Decode$andThen,
		function (attributes) {
			return A2(
				_elm_lang$core$Json_Decode$map,
				function (_p4) {
					return A2(
						_elm_lang$core$Dict$union,
						attributes,
						_eeue56$elm_html_in_elm$ElmHtml_Helpers$filterKnownKeys(_p4));
				},
				_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeDictFilterMap(otherDecoder));
		},
		_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeAttributes(otherDecoder));
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$encodeStyles = function (stylesDict) {
	var encodedDict = A2(
		_elm_lang$core$List$map,
		function (_p5) {
			var _p6 = _p5;
			return {
				ctor: '_Tuple2',
				_0: _p6._0,
				_1: _elm_lang$core$Json_Encode$string(_p6._1)
			};
		},
		_elm_lang$core$Dict$toList(stylesDict));
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: _eeue56$elm_html_in_elm$ElmHtml_Constants$styleKey,
				_1: _elm_lang$core$Json_Encode$object(encodedDict)
			},
			_1: {ctor: '[]'}
		});
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeStyles = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(
			_elm_lang$core$Json_Decode$field,
			_eeue56$elm_html_in_elm$ElmHtml_Constants$styleKey,
			_elm_lang$core$Json_Decode$dict(_elm_lang$core$Json_Decode$string)),
		_1: {
			ctor: '::',
			_0: _elm_lang$core$Json_Decode$succeed(_elm_lang$core$Dict$empty),
			_1: {ctor: '[]'}
		}
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$encodeNodeRecord = function (record) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'tag',
				_1: _elm_lang$core$Json_Encode$string(record.tag)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'descendantsCount',
					_1: _elm_lang$core$Json_Encode$int(record.descendantsCount)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$encodeTextTag = function (_p7) {
	var _p8 = _p7;
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'text',
				_1: _elm_lang$core$Json_Encode$string(_p8.text)
			},
			_1: {ctor: '[]'}
		});
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeTextTag = A2(
	_elm_lang$core$Json_Decode$field,
	'text',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (text) {
			return _elm_lang$core$Json_Decode$succeed(
				{text: text});
		},
		_elm_lang$core$Json_Decode$string));
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$TextTagRecord = function (a) {
	return {text: a};
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NodeRecord = F4(
	function (a, b, c, d) {
		return {tag: a, children: b, facts: c, descendantsCount: d};
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$MarkdownNodeRecord = F2(
	function (a, b) {
		return {facts: a, model: b};
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$CustomNodeRecord = F2(
	function (a, b) {
		return {facts: a, model: b};
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$Facts = F5(
	function (a, b, c, d, e) {
		return {styles: a, events: b, attributeNamespace: c, stringAttributes: d, boolAttributes: e};
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeFacts = A6(
	_elm_lang$core$Json_Decode$map5,
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$Facts,
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeStyles,
	_elm_lang$core$Json_Decode$maybe(
		A2(_elm_lang$core$Json_Decode$field, _eeue56$elm_html_in_elm$ElmHtml_Constants$eventKey, _elm_lang$core$Json_Decode$value)),
	_elm_lang$core$Json_Decode$maybe(
		A2(_elm_lang$core$Json_Decode$field, _eeue56$elm_html_in_elm$ElmHtml_Constants$attributeNamespaceKey, _elm_lang$core$Json_Decode$value)),
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeOthers(_elm_lang$core$Json_Decode$string),
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeOthers(_elm_lang$core$Json_Decode$bool));
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeCustomNodeRecord = A3(
	_elm_lang$core$Json_Decode$map2,
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$CustomNodeRecord,
	A2(_elm_lang$core$Json_Decode$field, 'facts', _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeFacts),
	A2(_elm_lang$core$Json_Decode$field, 'model', _elm_lang$core$Json_Decode$value));
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeMarkdownNodeRecord = A3(
	_elm_lang$core$Json_Decode$map2,
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$MarkdownNodeRecord,
	A2(_elm_lang$core$Json_Decode$field, 'facts', _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeFacts),
	A2(_elm_lang$core$Json_Decode$field, 'model', _eeue56$elm_html_in_elm$ElmHtml_Markdown$decodeMarkdownModel));
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NoOp = {ctor: 'NoOp'};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$MarkdownNode = function (a) {
	return {ctor: 'MarkdownNode', _0: a};
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$CustomNode = function (a) {
	return {ctor: 'CustomNode', _0: a};
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeCustomNode = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(_elm_lang$core$Json_Decode$map, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$MarkdownNode, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeMarkdownNodeRecord),
		_1: {
			ctor: '::',
			_0: A2(_elm_lang$core$Json_Decode$map, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$CustomNode, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeCustomNodeRecord),
			_1: {ctor: '[]'}
		}
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NodeEntry = function (a) {
	return {ctor: 'NodeEntry', _0: a};
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$TextTag = function (a) {
	return {ctor: 'TextTag', _0: a};
};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (typeString) {
		var _p9 = typeString;
		switch (_p9) {
			case 'text':
				return A2(_elm_lang$core$Json_Decode$map, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$TextTag, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeTextTag);
			case 'keyed-node':
				return A2(_elm_lang$core$Json_Decode$map, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NodeEntry, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeKeyedNode);
			case 'node':
				return A2(_elm_lang$core$Json_Decode$map, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NodeEntry, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeNode);
			case 'custom':
				return _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeCustomNode;
			case 'tagger':
				return _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeTagger;
			case 'thunk':
				return A2(_elm_lang$core$Json_Decode$field, 'node', _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml);
			default:
				return _elm_lang$core$Json_Decode$fail(
					A2(_elm_lang$core$Basics_ops['++'], 'No such type as ', typeString));
		}
	},
	A2(_elm_lang$core$Json_Decode$field, 'type', _elm_lang$core$Json_Decode$string));
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeKeyedNode = function () {
	var decodeSecondNode = A2(_elm_lang$core$Json_Decode$field, '_1', _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml);
	return A5(
		_elm_lang$core$Json_Decode$map4,
		_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NodeRecord,
		A2(_elm_lang$core$Json_Decode$field, 'tag', _elm_lang$core$Json_Decode$string),
		A2(
			_elm_lang$core$Json_Decode$field,
			'children',
			_elm_lang$core$Json_Decode$list(decodeSecondNode)),
		A2(_elm_lang$core$Json_Decode$field, 'facts', _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeFacts),
		A2(_elm_lang$core$Json_Decode$field, 'descendantsCount', _elm_lang$core$Json_Decode$int));
}();
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeNode = A5(
	_elm_lang$core$Json_Decode$map4,
	_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NodeRecord,
	A2(_elm_lang$core$Json_Decode$field, 'tag', _elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$field,
		'children',
		_elm_lang$core$Json_Decode$list(_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml)),
	A2(_elm_lang$core$Json_Decode$field, 'facts', _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeFacts),
	A2(_elm_lang$core$Json_Decode$field, 'descendantsCount', _elm_lang$core$Json_Decode$int));
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeTagger = _elm_lang$core$Json_Decode$oneOf(
	{
		ctor: '::',
		_0: A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'node',
				_1: {ctor: '[]'}
			},
			_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$core$Json_Decode$at,
				{
					ctor: '::',
					_0: 'text',
					_1: {ctor: '[]'}
				},
				_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$Json_Decode$at,
					{
						ctor: '::',
						_0: 'custom',
						_1: {ctor: '[]'}
					},
					_eeue56$elm_html_in_elm$ElmHtml_InternalTypes$decodeElmHtml),
				_1: {ctor: '[]'}
			}
		}
	});
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NormalElements = {ctor: 'NormalElements'};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$ForeignElements = {ctor: 'ForeignElements'};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$EscapableRawTextElements = {ctor: 'EscapableRawTextElements'};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$RawTextElements = {ctor: 'RawTextElements'};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$VoidElements = {ctor: 'VoidElements'};
var _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$toElementKind = function (element) {
	return A2(_elm_lang$core$List$member, element, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$voidElements) ? _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$VoidElements : (A2(_elm_lang$core$List$member, element, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$rawTextElements) ? _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$RawTextElements : (A2(_elm_lang$core$List$member, element, _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$escapableRawTextElements) ? _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$EscapableRawTextElements : _eeue56$elm_html_in_elm$ElmHtml_InternalTypes$NormalElements));
};
